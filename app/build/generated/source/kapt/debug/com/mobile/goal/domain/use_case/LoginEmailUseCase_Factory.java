// Generated by Dagger (https://dagger.dev).
package com.mobile.goal.domain.use_case;

import com.mobile.goal.domain.repository.AuthRepository;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class LoginEmailUseCase_Factory implements Factory<LoginEmailUseCase> {
  private final Provider<AuthRepository> repositoryProvider;

  public LoginEmailUseCase_Factory(Provider<AuthRepository> repositoryProvider) {
    this.repositoryProvider = repositoryProvider;
  }

  @Override
  public LoginEmailUseCase get() {
    return newInstance(repositoryProvider.get());
  }

  public static LoginEmailUseCase_Factory create(Provider<AuthRepository> repositoryProvider) {
    return new LoginEmailUseCase_Factory(repositoryProvider);
  }

  public static LoginEmailUseCase newInstance(AuthRepository repository) {
    return new LoginEmailUseCase(repository);
  }
}

// Generated by Dagger (https://dagger.dev).
package com.mobile.goal.ui.onboarding.welcome;

import com.mobile.goal.data.local.data_store.SessionDataStore;
import com.mobile.goal.domain.use_case.GetAboutMeUseCase;
import com.mobile.goal.domain.use_case.GetFBSessionTokenUseCase;
import com.mobile.goal.domain.use_case.RequestTokenUseCase;
import com.mobile.goal.domain.use_case.SignInFacebookUseCase;
import com.mobile.goal.domain.use_case.SignInGoogleUseCase;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class WelcomeViewModel_Factory implements Factory<WelcomeViewModel> {
  private final Provider<SignInGoogleUseCase> signInGoogleUseCaseProvider;

  private final Provider<GetFBSessionTokenUseCase> getFBSessionTokenUseCaseProvider;

  private final Provider<SignInFacebookUseCase> signInFacebookUseCaseProvider;

  private final Provider<RequestTokenUseCase> requestTokenUseCaseProvider;

  private final Provider<GetAboutMeUseCase> getAboutMeUseCaseProvider;

  private final Provider<SessionDataStore> sessionDataStoreProvider;

  public WelcomeViewModel_Factory(Provider<SignInGoogleUseCase> signInGoogleUseCaseProvider,
      Provider<GetFBSessionTokenUseCase> getFBSessionTokenUseCaseProvider,
      Provider<SignInFacebookUseCase> signInFacebookUseCaseProvider,
      Provider<RequestTokenUseCase> requestTokenUseCaseProvider,
      Provider<GetAboutMeUseCase> getAboutMeUseCaseProvider,
      Provider<SessionDataStore> sessionDataStoreProvider) {
    this.signInGoogleUseCaseProvider = signInGoogleUseCaseProvider;
    this.getFBSessionTokenUseCaseProvider = getFBSessionTokenUseCaseProvider;
    this.signInFacebookUseCaseProvider = signInFacebookUseCaseProvider;
    this.requestTokenUseCaseProvider = requestTokenUseCaseProvider;
    this.getAboutMeUseCaseProvider = getAboutMeUseCaseProvider;
    this.sessionDataStoreProvider = sessionDataStoreProvider;
  }

  @Override
  public WelcomeViewModel get() {
    return newInstance(signInGoogleUseCaseProvider.get(), getFBSessionTokenUseCaseProvider.get(), signInFacebookUseCaseProvider.get(), requestTokenUseCaseProvider.get(), getAboutMeUseCaseProvider.get(), sessionDataStoreProvider.get());
  }

  public static WelcomeViewModel_Factory create(
      Provider<SignInGoogleUseCase> signInGoogleUseCaseProvider,
      Provider<GetFBSessionTokenUseCase> getFBSessionTokenUseCaseProvider,
      Provider<SignInFacebookUseCase> signInFacebookUseCaseProvider,
      Provider<RequestTokenUseCase> requestTokenUseCaseProvider,
      Provider<GetAboutMeUseCase> getAboutMeUseCaseProvider,
      Provider<SessionDataStore> sessionDataStoreProvider) {
    return new WelcomeViewModel_Factory(signInGoogleUseCaseProvider, getFBSessionTokenUseCaseProvider, signInFacebookUseCaseProvider, requestTokenUseCaseProvider, getAboutMeUseCaseProvider, sessionDataStoreProvider);
  }

  public static WelcomeViewModel newInstance(SignInGoogleUseCase signInGoogleUseCase,
      GetFBSessionTokenUseCase getFBSessionTokenUseCase,
      SignInFacebookUseCase signInFacebookUseCase, RequestTokenUseCase requestTokenUseCase,
      GetAboutMeUseCase getAboutMeUseCase, SessionDataStore sessionDataStore) {
    return new WelcomeViewModel(signInGoogleUseCase, getFBSessionTokenUseCase, signInFacebookUseCase, requestTokenUseCase, getAboutMeUseCase, sessionDataStore);
  }
}

// Generated by Dagger (https://dagger.dev).
package com.mobile.goal.ui.onboarding.complete_profile;

import com.mobile.goal.data.local.data_store.SessionDataStore;
import com.mobile.goal.domain.use_case.UpdateProfileUseCase;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class CompleteProfilelViewModel_Factory implements Factory<CompleteProfilelViewModel> {
  private final Provider<UpdateProfileUseCase> updateProfileUseCaseProvider;

  private final Provider<SessionDataStore> sessionDataStoreProvider;

  public CompleteProfilelViewModel_Factory(
      Provider<UpdateProfileUseCase> updateProfileUseCaseProvider,
      Provider<SessionDataStore> sessionDataStoreProvider) {
    this.updateProfileUseCaseProvider = updateProfileUseCaseProvider;
    this.sessionDataStoreProvider = sessionDataStoreProvider;
  }

  @Override
  public CompleteProfilelViewModel get() {
    return newInstance(updateProfileUseCaseProvider.get(), sessionDataStoreProvider.get());
  }

  public static CompleteProfilelViewModel_Factory create(
      Provider<UpdateProfileUseCase> updateProfileUseCaseProvider,
      Provider<SessionDataStore> sessionDataStoreProvider) {
    return new CompleteProfilelViewModel_Factory(updateProfileUseCaseProvider, sessionDataStoreProvider);
  }

  public static CompleteProfilelViewModel newInstance(UpdateProfileUseCase updateProfileUseCase,
      SessionDataStore sessionDataStore) {
    return new CompleteProfilelViewModel(updateProfileUseCase, sessionDataStore);
  }
}

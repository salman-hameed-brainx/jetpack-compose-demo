// Generated by Dagger (https://dagger.dev).
package com.mobile.goal.ui.profile.settings.change_password;

import com.mobile.goal.domain.use_case.ChangePasswordUseCase;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class ChangePasswordViewModel_Factory implements Factory<ChangePasswordViewModel> {
  private final Provider<ChangePasswordUseCase> changePasswordUseCaseProvider;

  public ChangePasswordViewModel_Factory(
      Provider<ChangePasswordUseCase> changePasswordUseCaseProvider) {
    this.changePasswordUseCaseProvider = changePasswordUseCaseProvider;
  }

  @Override
  public ChangePasswordViewModel get() {
    return newInstance(changePasswordUseCaseProvider.get());
  }

  public static ChangePasswordViewModel_Factory create(
      Provider<ChangePasswordUseCase> changePasswordUseCaseProvider) {
    return new ChangePasswordViewModel_Factory(changePasswordUseCaseProvider);
  }

  public static ChangePasswordViewModel newInstance(ChangePasswordUseCase changePasswordUseCase) {
    return new ChangePasswordViewModel(changePasswordUseCase);
  }
}

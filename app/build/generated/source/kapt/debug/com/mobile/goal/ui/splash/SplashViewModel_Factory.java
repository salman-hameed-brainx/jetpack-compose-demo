// Generated by Dagger (https://dagger.dev).
package com.mobile.goal.ui.splash;

import com.mobile.goal.data.local.data_store.SessionDataStore;
import com.mobile.goal.data.local.data_store.SettingsDataStore;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class SplashViewModel_Factory implements Factory<SplashViewModel> {
  private final Provider<SessionDataStore> sessionDataStoreProvider;

  private final Provider<SettingsDataStore> settingsDataStoreProvider;

  public SplashViewModel_Factory(Provider<SessionDataStore> sessionDataStoreProvider,
      Provider<SettingsDataStore> settingsDataStoreProvider) {
    this.sessionDataStoreProvider = sessionDataStoreProvider;
    this.settingsDataStoreProvider = settingsDataStoreProvider;
  }

  @Override
  public SplashViewModel get() {
    return newInstance(sessionDataStoreProvider.get(), settingsDataStoreProvider.get());
  }

  public static SplashViewModel_Factory create(Provider<SessionDataStore> sessionDataStoreProvider,
      Provider<SettingsDataStore> settingsDataStoreProvider) {
    return new SplashViewModel_Factory(sessionDataStoreProvider, settingsDataStoreProvider);
  }

  public static SplashViewModel newInstance(SessionDataStore sessionDataStore,
      SettingsDataStore settingsDataStore) {
    return new SplashViewModel(sessionDataStore, settingsDataStore);
  }
}

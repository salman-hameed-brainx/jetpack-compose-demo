// Generated by Dagger (https://dagger.dev).
package com.mobile.goal.di;

import com.mobile.goal.data.remote.Api;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;
import okhttp3.OkHttpClient;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class NetworkModule_ProvideApiFactory implements Factory<Api> {
  private final Provider<OkHttpClient> okHttpClientProvider;

  public NetworkModule_ProvideApiFactory(Provider<OkHttpClient> okHttpClientProvider) {
    this.okHttpClientProvider = okHttpClientProvider;
  }

  @Override
  public Api get() {
    return provideApi(okHttpClientProvider.get());
  }

  public static NetworkModule_ProvideApiFactory create(
      Provider<OkHttpClient> okHttpClientProvider) {
    return new NetworkModule_ProvideApiFactory(okHttpClientProvider);
  }

  public static Api provideApi(OkHttpClient okHttpClient) {
    return Preconditions.checkNotNullFromProvides(NetworkModule.INSTANCE.provideApi(okHttpClient));
  }
}

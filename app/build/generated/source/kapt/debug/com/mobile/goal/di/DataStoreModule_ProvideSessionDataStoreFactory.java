// Generated by Dagger (https://dagger.dev).
package com.mobile.goal.di;

import android.content.Context;
import com.mobile.goal.data.local.data_store.SessionDataStore;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class DataStoreModule_ProvideSessionDataStoreFactory implements Factory<SessionDataStore> {
  private final Provider<Context> appContextProvider;

  public DataStoreModule_ProvideSessionDataStoreFactory(Provider<Context> appContextProvider) {
    this.appContextProvider = appContextProvider;
  }

  @Override
  public SessionDataStore get() {
    return provideSessionDataStore(appContextProvider.get());
  }

  public static DataStoreModule_ProvideSessionDataStoreFactory create(
      Provider<Context> appContextProvider) {
    return new DataStoreModule_ProvideSessionDataStoreFactory(appContextProvider);
  }

  public static SessionDataStore provideSessionDataStore(Context appContext) {
    return Preconditions.checkNotNullFromProvides(DataStoreModule.INSTANCE.provideSessionDataStore(appContext));
  }
}

// Generated by Dagger (https://dagger.dev).
package com.mobile.goal.ui.daily_goal;

import com.mobile.goal.domain.use_case.GetGoalUseCase;
import com.mobile.goal.domain.use_case.SetGoalUseCase;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class DailyGoalsViewModel_Factory implements Factory<DailyGoalsViewModel> {
  private final Provider<SetGoalUseCase> setGoalUseCaseProvider;

  private final Provider<GetGoalUseCase> getGoalUseCaseProvider;

  public DailyGoalsViewModel_Factory(Provider<SetGoalUseCase> setGoalUseCaseProvider,
      Provider<GetGoalUseCase> getGoalUseCaseProvider) {
    this.setGoalUseCaseProvider = setGoalUseCaseProvider;
    this.getGoalUseCaseProvider = getGoalUseCaseProvider;
  }

  @Override
  public DailyGoalsViewModel get() {
    return newInstance(setGoalUseCaseProvider.get(), getGoalUseCaseProvider.get());
  }

  public static DailyGoalsViewModel_Factory create(Provider<SetGoalUseCase> setGoalUseCaseProvider,
      Provider<GetGoalUseCase> getGoalUseCaseProvider) {
    return new DailyGoalsViewModel_Factory(setGoalUseCaseProvider, getGoalUseCaseProvider);
  }

  public static DailyGoalsViewModel newInstance(SetGoalUseCase setGoalUseCase,
      GetGoalUseCase getGoalUseCase) {
    return new DailyGoalsViewModel(setGoalUseCase, getGoalUseCase);
  }
}

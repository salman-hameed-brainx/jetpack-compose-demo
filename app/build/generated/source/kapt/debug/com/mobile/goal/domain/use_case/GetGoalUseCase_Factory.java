// Generated by Dagger (https://dagger.dev).
package com.mobile.goal.domain.use_case;

import com.mobile.goal.domain.repository.UserRepository;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class GetGoalUseCase_Factory implements Factory<GetGoalUseCase> {
  private final Provider<UserRepository> repositoryProvider;

  public GetGoalUseCase_Factory(Provider<UserRepository> repositoryProvider) {
    this.repositoryProvider = repositoryProvider;
  }

  @Override
  public GetGoalUseCase get() {
    return newInstance(repositoryProvider.get());
  }

  public static GetGoalUseCase_Factory create(Provider<UserRepository> repositoryProvider) {
    return new GetGoalUseCase_Factory(repositoryProvider);
  }

  public static GetGoalUseCase newInstance(UserRepository repository) {
    return new GetGoalUseCase(repository);
  }
}

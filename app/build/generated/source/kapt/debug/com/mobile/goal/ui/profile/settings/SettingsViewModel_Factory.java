// Generated by Dagger (https://dagger.dev).
package com.mobile.goal.ui.profile.settings;

import com.mobile.goal.data.local.data_store.SessionDataStore;
import com.mobile.goal.domain.use_case.GetAboutMeUseCase;
import com.mobile.goal.domain.use_case.GetParticipantUseCase;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class SettingsViewModel_Factory implements Factory<SettingsViewModel> {
  private final Provider<SessionDataStore> sessionDataStoreProvider;

  private final Provider<GetParticipantUseCase> getParticipantUseCaseProvider;

  private final Provider<GetAboutMeUseCase> getAboutMeUseCaseProvider;

  public SettingsViewModel_Factory(Provider<SessionDataStore> sessionDataStoreProvider,
      Provider<GetParticipantUseCase> getParticipantUseCaseProvider,
      Provider<GetAboutMeUseCase> getAboutMeUseCaseProvider) {
    this.sessionDataStoreProvider = sessionDataStoreProvider;
    this.getParticipantUseCaseProvider = getParticipantUseCaseProvider;
    this.getAboutMeUseCaseProvider = getAboutMeUseCaseProvider;
  }

  @Override
  public SettingsViewModel get() {
    return newInstance(sessionDataStoreProvider.get(), getParticipantUseCaseProvider.get(), getAboutMeUseCaseProvider.get());
  }

  public static SettingsViewModel_Factory create(
      Provider<SessionDataStore> sessionDataStoreProvider,
      Provider<GetParticipantUseCase> getParticipantUseCaseProvider,
      Provider<GetAboutMeUseCase> getAboutMeUseCaseProvider) {
    return new SettingsViewModel_Factory(sessionDataStoreProvider, getParticipantUseCaseProvider, getAboutMeUseCaseProvider);
  }

  public static SettingsViewModel newInstance(SessionDataStore sessionDataStore,
      GetParticipantUseCase getParticipantUseCase, GetAboutMeUseCase getAboutMeUseCase) {
    return new SettingsViewModel(sessionDataStore, getParticipantUseCase, getAboutMeUseCase);
  }
}

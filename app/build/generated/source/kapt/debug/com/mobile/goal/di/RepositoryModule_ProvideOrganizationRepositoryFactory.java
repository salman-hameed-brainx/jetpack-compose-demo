// Generated by Dagger (https://dagger.dev).
package com.mobile.goal.di;

import com.mobile.goal.data.remote.Api;
import com.mobile.goal.domain.repository.OrganizationRepository;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class RepositoryModule_ProvideOrganizationRepositoryFactory implements Factory<OrganizationRepository> {
  private final Provider<Api> apiProvider;

  public RepositoryModule_ProvideOrganizationRepositoryFactory(Provider<Api> apiProvider) {
    this.apiProvider = apiProvider;
  }

  @Override
  public OrganizationRepository get() {
    return provideOrganizationRepository(apiProvider.get());
  }

  public static RepositoryModule_ProvideOrganizationRepositoryFactory create(
      Provider<Api> apiProvider) {
    return new RepositoryModule_ProvideOrganizationRepositoryFactory(apiProvider);
  }

  public static OrganizationRepository provideOrganizationRepository(Api api) {
    return Preconditions.checkNotNullFromProvides(RepositoryModule.INSTANCE.provideOrganizationRepository(api));
  }
}

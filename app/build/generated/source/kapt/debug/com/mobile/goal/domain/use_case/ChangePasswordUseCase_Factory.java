// Generated by Dagger (https://dagger.dev).
package com.mobile.goal.domain.use_case;

import com.mobile.goal.domain.repository.UserRepository;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class ChangePasswordUseCase_Factory implements Factory<ChangePasswordUseCase> {
  private final Provider<UserRepository> repositoryProvider;

  public ChangePasswordUseCase_Factory(Provider<UserRepository> repositoryProvider) {
    this.repositoryProvider = repositoryProvider;
  }

  @Override
  public ChangePasswordUseCase get() {
    return newInstance(repositoryProvider.get());
  }

  public static ChangePasswordUseCase_Factory create(Provider<UserRepository> repositoryProvider) {
    return new ChangePasswordUseCase_Factory(repositoryProvider);
  }

  public static ChangePasswordUseCase newInstance(UserRepository repository) {
    return new ChangePasswordUseCase(repository);
  }
}

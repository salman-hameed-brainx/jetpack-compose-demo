// Generated by Dagger (https://dagger.dev).
package com.mobile.goal.domain.use_case.competition;

import com.mobile.goal.domain.repository.CompetitionRepository;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class GetEntrants_Factory implements Factory<GetEntrants> {
  private final Provider<CompetitionRepository> repositoryProvider;

  public GetEntrants_Factory(Provider<CompetitionRepository> repositoryProvider) {
    this.repositoryProvider = repositoryProvider;
  }

  @Override
  public GetEntrants get() {
    return newInstance(repositoryProvider.get());
  }

  public static GetEntrants_Factory create(Provider<CompetitionRepository> repositoryProvider) {
    return new GetEntrants_Factory(repositoryProvider);
  }

  public static GetEntrants newInstance(CompetitionRepository repository) {
    return new GetEntrants(repository);
  }
}
